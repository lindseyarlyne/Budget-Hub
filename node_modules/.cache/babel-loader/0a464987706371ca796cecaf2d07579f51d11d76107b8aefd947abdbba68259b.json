{"ast":null,"code":"import{useMemo}from'react';export const useChartData=(entries,timeRange)=>{// Memoized chart data processing\nconst chartData=useMemo(()=>{if(!entries||entries.length===0)return[];// Filter entries based on time range\nconst now=new Date();let cutoffDate;switch(timeRange){case'3months':cutoffDate=new Date(now.getFullYear(),now.getMonth()-3,now.getDate());break;case'6months':cutoffDate=new Date(now.getFullYear(),now.getMonth()-6,now.getDate());break;case'1year':cutoffDate=new Date(now.getFullYear()-1,now.getMonth(),now.getDate());break;default:cutoffDate=null;// Include all data\n}const filteredEntries=cutoffDate?entries.filter(entry=>new Date(entry.date)>=cutoffDate):entries;// Sort entries by date\nconst sortedEntries=[...filteredEntries].sort((a,b)=>new Date(a.date)-new Date(b.date));// Calculate cumulative totals\nlet runningTotal=0;const processedData=sortedEntries.map(entry=>{runningTotal+=entry.amount;return{date:entry.date,amount:entry.amount,cumulative:runningTotal,formattedDate:new Date(entry.date).toLocaleDateString()};});return processedData;},[entries,timeRange]);// Memoized trend analysis\nconst trendData=useMemo(()=>{if(chartData.length<2)return null;const firstValue=chartData[0].cumulative;const lastValue=chartData[chartData.length-1].cumulative;const growth=lastValue-firstValue;const growthPercentage=firstValue>0?growth/firstValue*100:0;// Calculate average growth per period\nconst periods=chartData.length-1;const averageGrowth=periods>0?growth/periods:0;return{growth,growthPercentage:growthPercentage.toFixed(1),averageGrowth:averageGrowth.toFixed(2),direction:growth>0?'up':growth<0?'down':'stable'};},[chartData]);// Memoized data for different chart types\nconst lineChartData=useMemo(()=>({labels:chartData.map(item=>item.formattedDate),datasets:[{label:'Cumulative Savings',data:chartData.map(item=>item.cumulative),borderColor:'#4CAF50',backgroundColor:'rgba(76, 175, 80, 0.1)',tension:0.4,fill:true},{label:'Monthly Contributions',data:chartData.map(item=>item.amount),borderColor:'#2196F3',backgroundColor:'rgba(33, 150, 243, 0.1)',tension:0.4,fill:false}]}),[chartData]);const barChartData=useMemo(()=>({labels:chartData.map(item=>item.formattedDate),datasets:[{label:'Monthly Savings',data:chartData.map(item=>item.amount),backgroundColor:chartData.map((_,index)=>`rgba(76, 175, 80, ${0.3+index/chartData.length*0.7})`),borderColor:'#4CAF50',borderWidth:1}]}),[chartData]);// Statistical analysis\nconst statistics=useMemo(()=>{if(chartData.length===0)return null;const amounts=chartData.map(item=>item.amount);const total=amounts.reduce((sum,amount)=>sum+amount,0);const average=total/amounts.length;const min=Math.min(...amounts);const max=Math.max(...amounts);// Calculate standard deviation\nconst variance=amounts.reduce((sum,amount)=>sum+Math.pow(amount-average,2),0)/amounts.length;const standardDeviation=Math.sqrt(variance);// Calculate median\nconst sortedAmounts=[...amounts].sort((a,b)=>a-b);const median=sortedAmounts.length%2===0?(sortedAmounts[sortedAmounts.length/2-1]+sortedAmounts[sortedAmounts.length/2])/2:sortedAmounts[Math.floor(sortedAmounts.length/2)];return{total:total.toFixed(2),average:average.toFixed(2),median:median.toFixed(2),min:min.toFixed(2),max:max.toFixed(2),standardDeviation:standardDeviation.toFixed(2),consistency:standardDeviation<average*0.3?'High':standardDeviation<average*0.6?'Medium':'Low'};},[chartData]);return{chartData,trendData,lineChartData,barChartData,statistics};};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}