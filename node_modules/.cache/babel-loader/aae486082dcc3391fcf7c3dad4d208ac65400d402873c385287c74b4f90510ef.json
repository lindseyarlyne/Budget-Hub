{"ast":null,"code":"var _s = $RefreshSig$();\n// Performance monitoring and optimization utilities\n\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\nclass PerformanceMonitor {\n  constructor() {\n    this.metrics = new Map();\n    this.observers = new Map();\n    this.initialized = false;\n  }\n  init() {\n    if (this.initialized) return;\n    this.setupWebVitals();\n    this.setupPerformanceObserver();\n    this.setupMemoryMonitoring();\n    this.setupUserTimingAPI();\n    this.initialized = true;\n  }\n  setupWebVitals() {\n    const onPerfEntry = metric => {\n      this.metrics.set(metric.name, metric);\n      this.logMetric(metric);\n\n      // Send to analytics in production\n      if (process.env.NODE_ENV === 'production') {\n        this.sendToAnalytics(metric);\n      }\n    };\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n  setupPerformanceObserver() {\n    if ('PerformanceObserver' in window) {\n      // Long task monitoring\n      try {\n        const longTaskObserver = new PerformanceObserver(list => {\n          list.getEntries().forEach(entry => {\n            if (entry.duration > 50) {\n              console.warn('Long task detected:', {\n                duration: entry.duration,\n                startTime: entry.startTime,\n                name: entry.name\n              });\n            }\n          });\n        });\n        longTaskObserver.observe({\n          entryTypes: ['longtask']\n        });\n        this.observers.set('longtask', longTaskObserver);\n      } catch (e) {\n        console.warn('Long task observer not supported');\n      }\n\n      // Layout shift monitoring\n      try {\n        const layoutShiftObserver = new PerformanceObserver(list => {\n          list.getEntries().forEach(entry => {\n            if (entry.value > 0.1) {\n              console.warn('Layout shift detected:', {\n                value: entry.value,\n                startTime: entry.startTime,\n                sources: entry.sources\n              });\n            }\n          });\n        });\n        layoutShiftObserver.observe({\n          entryTypes: ['layout-shift']\n        });\n        this.observers.set('layout-shift', layoutShiftObserver);\n      } catch (e) {\n        console.warn('Layout shift observer not supported');\n      }\n\n      // Resource timing\n      try {\n        const resourceObserver = new PerformanceObserver(list => {\n          list.getEntries().forEach(entry => {\n            const loadTime = entry.responseEnd - entry.requestStart;\n            if (loadTime > 1000) {\n              console.warn('Slow resource detected:', {\n                name: entry.name,\n                loadTime,\n                size: entry.transferSize\n              });\n            }\n          });\n        });\n        resourceObserver.observe({\n          entryTypes: ['resource']\n        });\n        this.observers.set('resource', resourceObserver);\n      } catch (e) {\n        console.warn('Resource observer not supported');\n      }\n    }\n  }\n  setupMemoryMonitoring() {\n    if ('memory' in performance) {\n      setInterval(() => {\n        const memory = performance.memory;\n        const usedJSHeapSize = Math.round(memory.usedJSHeapSize / 1048576);\n        const totalJSHeapSize = Math.round(memory.totalJSHeapSize / 1048576);\n        if (usedJSHeapSize > 50) {\n          // Alert if over 50MB\n          console.warn('High memory usage:', {\n            used: `${usedJSHeapSize}MB`,\n            total: `${totalJSHeapSize}MB`,\n            percentage: Math.round(usedJSHeapSize / totalJSHeapSize * 100)\n          });\n        }\n      }, 30000); // Check every 30 seconds\n    }\n  }\n  setupUserTimingAPI() {\n    // Custom performance marks and measures\n    this.mark = name => {\n      performance.mark(name);\n    };\n    this.measure = (name, startMark, endMark) => {\n      try {\n        performance.measure(name, startMark, endMark);\n        const measure = performance.getEntriesByName(name, 'measure')[0];\n        console.log(`Performance measure: ${name} took ${measure.duration.toFixed(2)}ms`);\n        return measure;\n      } catch (e) {\n        console.warn('Failed to measure performance:', e);\n      }\n    };\n  }\n\n  // Component performance tracking\n  trackComponentRender(componentName, renderTime) {\n    const metric = {\n      name: 'component-render',\n      component: componentName,\n      duration: renderTime,\n      timestamp: Date.now()\n    };\n    this.metrics.set(`component-${componentName}`, metric);\n    if (renderTime > 16) {\n      // Longer than one frame\n      console.warn(`Slow component render: ${componentName} took ${renderTime.toFixed(2)}ms`);\n    }\n  }\n\n  // API request performance tracking\n  trackAPIRequest(url, method, duration, status) {\n    const metric = {\n      name: 'api-request',\n      url,\n      method,\n      duration,\n      status,\n      timestamp: Date.now()\n    };\n    this.metrics.set(`api-${url}`, metric);\n    if (duration > 2000) {\n      // Longer than 2 seconds\n      console.warn(`Slow API request: ${method} ${url} took ${duration}ms`);\n    }\n  }\n\n  // Bundle size tracking\n  async trackBundleSize() {\n    if ('navigator' in window && 'connection' in navigator) {\n      const connection = navigator.connection;\n      console.log('Connection info:', {\n        effectiveType: connection.effectiveType,\n        downlink: connection.downlink,\n        rtt: connection.rtt\n      });\n    }\n\n    // Track script load times\n    const scripts = document.querySelectorAll('script[src]');\n    scripts.forEach(script => {\n      const observer = new PerformanceObserver(list => {\n        list.getEntries().forEach(entry => {\n          if (entry.name === script.src) {\n            console.log(`Script load time: ${script.src} - ${entry.duration.toFixed(2)}ms`);\n          }\n        });\n      });\n      observer.observe({\n        entryTypes: ['resource']\n      });\n    });\n  }\n  logMetric(metric) {\n    console.log(`Web Vital - ${metric.name}:`, metric.value);\n\n    // Log warnings for poor performance\n    switch (metric.name) {\n      case 'LCP':\n        if (metric.value > 2500) {\n          console.warn('Poor LCP detected. Consider optimizing largest contentful paint.');\n        }\n        break;\n      case 'FID':\n        if (metric.value > 100) {\n          console.warn('Poor FID detected. Consider optimizing JavaScript execution.');\n        }\n        break;\n      case 'CLS':\n        if (metric.value > 0.1) {\n          console.warn('Poor CLS detected. Consider fixing layout shifts.');\n        }\n        break;\n      case 'FCP':\n        if (metric.value > 1800) {\n          console.warn('Poor FCP detected. Consider optimizing critical resources.');\n        }\n        break;\n      case 'TTFB':\n        if (metric.value > 800) {\n          console.warn('Poor TTFB detected. Consider optimizing server response time.');\n        }\n        break;\n    }\n  }\n  sendToAnalytics(metric) {\n    // In a real application, you would send this to your analytics service\n    // Example: Google Analytics, Adobe Analytics, custom endpoint, etc.\n\n    if (typeof gtag !== 'undefined') {\n      gtag('event', metric.name, {\n        event_category: 'Web Vitals',\n        value: Math.round(metric.name === 'CLS' ? metric.value * 1000 : metric.value),\n        non_interaction: true\n      });\n    }\n\n    // Or send to custom endpoint\n    // fetch('/api/analytics/web-vitals', {\n    //   method: 'POST',\n    //   body: JSON.stringify(metric),\n    //   headers: { 'Content-Type': 'application/json' }\n    // });\n  }\n\n  // Get performance report\n  getPerformanceReport() {\n    const report = {\n      webVitals: {},\n      customMetrics: {},\n      browserInfo: {\n        userAgent: navigator.userAgent,\n        language: navigator.language,\n        platform: navigator.platform,\n        cookieEnabled: navigator.cookieEnabled,\n        onLine: navigator.onLine\n      },\n      memoryInfo: performance.memory ? {\n        usedJSHeapSize: Math.round(performance.memory.usedJSHeapSize / 1048576),\n        totalJSHeapSize: Math.round(performance.memory.totalJSHeapSize / 1048576),\n        jsHeapSizeLimit: Math.round(performance.memory.jsHeapSizeLimit / 1048576)\n      } : null,\n      timestamp: Date.now()\n    };\n\n    // Collect Web Vitals\n    ['CLS', 'FID', 'FCP', 'LCP', 'TTFB'].forEach(name => {\n      if (this.metrics.has(name)) {\n        report.webVitals[name] = this.metrics.get(name);\n      }\n    });\n\n    // Collect custom metrics\n    this.metrics.forEach((value, key) => {\n      if (!['CLS', 'FID', 'FCP', 'LCP', 'TTFB'].includes(key)) {\n        report.customMetrics[key] = value;\n      }\n    });\n    return report;\n  }\n\n  // Cleanup\n  destroy() {\n    this.observers.forEach(observer => observer.disconnect());\n    this.observers.clear();\n    this.metrics.clear();\n    this.initialized = false;\n  }\n}\n\n// Performance optimization utilities\nexport const performanceUtils = {\n  // Debounce function for performance optimization\n  debounce(func, wait, immediate) {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        timeout = null;\n        if (!immediate) func.apply(this, args);\n      };\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(this, args);\n    };\n  },\n  // Throttle function for performance optimization\n  throttle(func, limit) {\n    let inThrottle;\n    return function executedFunction(...args) {\n      if (!inThrottle) {\n        func.apply(this, args);\n        inThrottle = true;\n        setTimeout(() => inThrottle = false, limit);\n      }\n    };\n  },\n  // Lazy load images\n  lazyLoadImages() {\n    if ('IntersectionObserver' in window) {\n      const imageObserver = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const img = entry.target;\n            img.src = img.dataset.src;\n            img.classList.remove('lazy');\n            observer.unobserve(img);\n          }\n        });\n      });\n      document.querySelectorAll('img[data-src]').forEach(img => {\n        imageObserver.observe(img);\n      });\n    }\n  },\n  // Preload critical resources\n  preloadResource(href, as, type = null) {\n    const link = document.createElement('link');\n    link.rel = 'preload';\n    link.href = href;\n    link.as = as;\n    if (type) link.type = type;\n    document.head.appendChild(link);\n  },\n  // Check if device has reduced motion preference\n  prefersReducedMotion() {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n  }\n};\n\n// Export singleton instance\nexport const performanceMonitor = new PerformanceMonitor();\n\n// React hook for component performance tracking  \nimport React from 'react';\nexport const usePerformanceTracking = componentName => {\n  _s();\n  const [renderStart, setRenderStart] = React.useState(null);\n  React.useEffect(() => {\n    setRenderStart(performance.now());\n  }, []);\n  React.useEffect(() => {\n    if (renderStart) {\n      const renderTime = performance.now() - renderStart;\n      performanceMonitor.trackComponentRender(componentName, renderTime);\n    }\n  });\n};\n_s(usePerformanceTracking, \"uxSkXv5etbluOf8lNHHSUJdP7/0=\");\nexport default performanceMonitor;","map":{"version":3,"names":["getCLS","getFID","getFCP","getLCP","getTTFB","PerformanceMonitor","constructor","metrics","Map","observers","initialized","init","setupWebVitals","setupPerformanceObserver","setupMemoryMonitoring","setupUserTimingAPI","onPerfEntry","metric","set","name","logMetric","process","env","NODE_ENV","sendToAnalytics","window","longTaskObserver","PerformanceObserver","list","getEntries","forEach","entry","duration","console","warn","startTime","observe","entryTypes","e","layoutShiftObserver","value","sources","resourceObserver","loadTime","responseEnd","requestStart","size","transferSize","performance","setInterval","memory","usedJSHeapSize","Math","round","totalJSHeapSize","used","total","percentage","mark","measure","startMark","endMark","getEntriesByName","log","toFixed","trackComponentRender","componentName","renderTime","component","timestamp","Date","now","trackAPIRequest","url","method","status","trackBundleSize","navigator","connection","effectiveType","downlink","rtt","scripts","document","querySelectorAll","script","observer","src","gtag","event_category","non_interaction","getPerformanceReport","report","webVitals","customMetrics","browserInfo","userAgent","language","platform","cookieEnabled","onLine","memoryInfo","jsHeapSizeLimit","has","get","key","includes","destroy","disconnect","clear","performanceUtils","debounce","func","wait","immediate","timeout","executedFunction","args","later","apply","callNow","clearTimeout","setTimeout","throttle","limit","inThrottle","lazyLoadImages","imageObserver","IntersectionObserver","entries","isIntersecting","img","target","dataset","classList","remove","unobserve","preloadResource","href","as","type","link","createElement","rel","head","appendChild","prefersReducedMotion","matchMedia","matches","performanceMonitor","React","usePerformanceTracking","_s","renderStart","setRenderStart","useState","useEffect"],"sources":["/workspace/src/utils/performance.js"],"sourcesContent":["// Performance monitoring and optimization utilities\n\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\n\nclass PerformanceMonitor {\n  constructor() {\n    this.metrics = new Map();\n    this.observers = new Map();\n    this.initialized = false;\n  }\n\n  init() {\n    if (this.initialized) return;\n    \n    this.setupWebVitals();\n    this.setupPerformanceObserver();\n    this.setupMemoryMonitoring();\n    this.setupUserTimingAPI();\n    \n    this.initialized = true;\n  }\n\n  setupWebVitals() {\n    const onPerfEntry = (metric) => {\n      this.metrics.set(metric.name, metric);\n      this.logMetric(metric);\n      \n      // Send to analytics in production\n      if (process.env.NODE_ENV === 'production') {\n        this.sendToAnalytics(metric);\n      }\n    };\n\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n\n  setupPerformanceObserver() {\n    if ('PerformanceObserver' in window) {\n      // Long task monitoring\n      try {\n        const longTaskObserver = new PerformanceObserver((list) => {\n          list.getEntries().forEach((entry) => {\n            if (entry.duration > 50) {\n              console.warn('Long task detected:', {\n                duration: entry.duration,\n                startTime: entry.startTime,\n                name: entry.name\n              });\n            }\n          });\n        });\n        longTaskObserver.observe({ entryTypes: ['longtask'] });\n        this.observers.set('longtask', longTaskObserver);\n      } catch (e) {\n        console.warn('Long task observer not supported');\n      }\n\n      // Layout shift monitoring\n      try {\n        const layoutShiftObserver = new PerformanceObserver((list) => {\n          list.getEntries().forEach((entry) => {\n            if (entry.value > 0.1) {\n              console.warn('Layout shift detected:', {\n                value: entry.value,\n                startTime: entry.startTime,\n                sources: entry.sources\n              });\n            }\n          });\n        });\n        layoutShiftObserver.observe({ entryTypes: ['layout-shift'] });\n        this.observers.set('layout-shift', layoutShiftObserver);\n      } catch (e) {\n        console.warn('Layout shift observer not supported');\n      }\n\n      // Resource timing\n      try {\n        const resourceObserver = new PerformanceObserver((list) => {\n          list.getEntries().forEach((entry) => {\n            const loadTime = entry.responseEnd - entry.requestStart;\n            if (loadTime > 1000) {\n              console.warn('Slow resource detected:', {\n                name: entry.name,\n                loadTime,\n                size: entry.transferSize\n              });\n            }\n          });\n        });\n        resourceObserver.observe({ entryTypes: ['resource'] });\n        this.observers.set('resource', resourceObserver);\n      } catch (e) {\n        console.warn('Resource observer not supported');\n      }\n    }\n  }\n\n  setupMemoryMonitoring() {\n    if ('memory' in performance) {\n      setInterval(() => {\n        const memory = performance.memory;\n        const usedJSHeapSize = Math.round(memory.usedJSHeapSize / 1048576);\n        const totalJSHeapSize = Math.round(memory.totalJSHeapSize / 1048576);\n        \n        if (usedJSHeapSize > 50) { // Alert if over 50MB\n          console.warn('High memory usage:', {\n            used: `${usedJSHeapSize}MB`,\n            total: `${totalJSHeapSize}MB`,\n            percentage: Math.round((usedJSHeapSize / totalJSHeapSize) * 100)\n          });\n        }\n      }, 30000); // Check every 30 seconds\n    }\n  }\n\n  setupUserTimingAPI() {\n    // Custom performance marks and measures\n    this.mark = (name) => {\n      performance.mark(name);\n    };\n\n    this.measure = (name, startMark, endMark) => {\n      try {\n        performance.measure(name, startMark, endMark);\n        const measure = performance.getEntriesByName(name, 'measure')[0];\n        console.log(`Performance measure: ${name} took ${measure.duration.toFixed(2)}ms`);\n        return measure;\n      } catch (e) {\n        console.warn('Failed to measure performance:', e);\n      }\n    };\n  }\n\n  // Component performance tracking\n  trackComponentRender(componentName, renderTime) {\n    const metric = {\n      name: 'component-render',\n      component: componentName,\n      duration: renderTime,\n      timestamp: Date.now()\n    };\n    \n    this.metrics.set(`component-${componentName}`, metric);\n    \n    if (renderTime > 16) { // Longer than one frame\n      console.warn(`Slow component render: ${componentName} took ${renderTime.toFixed(2)}ms`);\n    }\n  }\n\n  // API request performance tracking\n  trackAPIRequest(url, method, duration, status) {\n    const metric = {\n      name: 'api-request',\n      url,\n      method,\n      duration,\n      status,\n      timestamp: Date.now()\n    };\n    \n    this.metrics.set(`api-${url}`, metric);\n    \n    if (duration > 2000) { // Longer than 2 seconds\n      console.warn(`Slow API request: ${method} ${url} took ${duration}ms`);\n    }\n  }\n\n  // Bundle size tracking\n  async trackBundleSize() {\n    if ('navigator' in window && 'connection' in navigator) {\n      const connection = navigator.connection;\n      console.log('Connection info:', {\n        effectiveType: connection.effectiveType,\n        downlink: connection.downlink,\n        rtt: connection.rtt\n      });\n    }\n\n    // Track script load times\n    const scripts = document.querySelectorAll('script[src]');\n    scripts.forEach((script) => {\n      const observer = new PerformanceObserver((list) => {\n        list.getEntries().forEach((entry) => {\n          if (entry.name === script.src) {\n            console.log(`Script load time: ${script.src} - ${entry.duration.toFixed(2)}ms`);\n          }\n        });\n      });\n      observer.observe({ entryTypes: ['resource'] });\n    });\n  }\n\n  logMetric(metric) {\n    console.log(`Web Vital - ${metric.name}:`, metric.value);\n    \n    // Log warnings for poor performance\n    switch (metric.name) {\n      case 'LCP':\n        if (metric.value > 2500) {\n          console.warn('Poor LCP detected. Consider optimizing largest contentful paint.');\n        }\n        break;\n      case 'FID':\n        if (metric.value > 100) {\n          console.warn('Poor FID detected. Consider optimizing JavaScript execution.');\n        }\n        break;\n      case 'CLS':\n        if (metric.value > 0.1) {\n          console.warn('Poor CLS detected. Consider fixing layout shifts.');\n        }\n        break;\n      case 'FCP':\n        if (metric.value > 1800) {\n          console.warn('Poor FCP detected. Consider optimizing critical resources.');\n        }\n        break;\n      case 'TTFB':\n        if (metric.value > 800) {\n          console.warn('Poor TTFB detected. Consider optimizing server response time.');\n        }\n        break;\n    }\n  }\n\n  sendToAnalytics(metric) {\n    // In a real application, you would send this to your analytics service\n    // Example: Google Analytics, Adobe Analytics, custom endpoint, etc.\n    \n    if (typeof gtag !== 'undefined') {\n      gtag('event', metric.name, {\n        event_category: 'Web Vitals',\n        value: Math.round(metric.name === 'CLS' ? metric.value * 1000 : metric.value),\n        non_interaction: true\n      });\n    }\n    \n    // Or send to custom endpoint\n    // fetch('/api/analytics/web-vitals', {\n    //   method: 'POST',\n    //   body: JSON.stringify(metric),\n    //   headers: { 'Content-Type': 'application/json' }\n    // });\n  }\n\n  // Get performance report\n  getPerformanceReport() {\n    const report = {\n      webVitals: {},\n      customMetrics: {},\n      browserInfo: {\n        userAgent: navigator.userAgent,\n        language: navigator.language,\n        platform: navigator.platform,\n        cookieEnabled: navigator.cookieEnabled,\n        onLine: navigator.onLine\n      },\n      memoryInfo: performance.memory ? {\n        usedJSHeapSize: Math.round(performance.memory.usedJSHeapSize / 1048576),\n        totalJSHeapSize: Math.round(performance.memory.totalJSHeapSize / 1048576),\n        jsHeapSizeLimit: Math.round(performance.memory.jsHeapSizeLimit / 1048576)\n      } : null,\n      timestamp: Date.now()\n    };\n\n    // Collect Web Vitals\n    ['CLS', 'FID', 'FCP', 'LCP', 'TTFB'].forEach(name => {\n      if (this.metrics.has(name)) {\n        report.webVitals[name] = this.metrics.get(name);\n      }\n    });\n\n    // Collect custom metrics\n    this.metrics.forEach((value, key) => {\n      if (!['CLS', 'FID', 'FCP', 'LCP', 'TTFB'].includes(key)) {\n        report.customMetrics[key] = value;\n      }\n    });\n\n    return report;\n  }\n\n  // Cleanup\n  destroy() {\n    this.observers.forEach(observer => observer.disconnect());\n    this.observers.clear();\n    this.metrics.clear();\n    this.initialized = false;\n  }\n}\n\n// Performance optimization utilities\nexport const performanceUtils = {\n  // Debounce function for performance optimization\n  debounce(func, wait, immediate) {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        timeout = null;\n        if (!immediate) func.apply(this, args);\n      };\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(this, args);\n    };\n  },\n\n  // Throttle function for performance optimization\n  throttle(func, limit) {\n    let inThrottle;\n    return function executedFunction(...args) {\n      if (!inThrottle) {\n        func.apply(this, args);\n        inThrottle = true;\n        setTimeout(() => inThrottle = false, limit);\n      }\n    };\n  },\n\n  // Lazy load images\n  lazyLoadImages() {\n    if ('IntersectionObserver' in window) {\n      const imageObserver = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const img = entry.target;\n            img.src = img.dataset.src;\n            img.classList.remove('lazy');\n            observer.unobserve(img);\n          }\n        });\n      });\n\n      document.querySelectorAll('img[data-src]').forEach(img => {\n        imageObserver.observe(img);\n      });\n    }\n  },\n\n  // Preload critical resources\n  preloadResource(href, as, type = null) {\n    const link = document.createElement('link');\n    link.rel = 'preload';\n    link.href = href;\n    link.as = as;\n    if (type) link.type = type;\n    document.head.appendChild(link);\n  },\n\n  // Check if device has reduced motion preference\n  prefersReducedMotion() {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n  }\n};\n\n// Export singleton instance\nexport const performanceMonitor = new PerformanceMonitor();\n\n// React hook for component performance tracking  \nimport React from 'react';\n\nexport const usePerformanceTracking = (componentName) => {\n  const [renderStart, setRenderStart] = React.useState(null);\n\n  React.useEffect(() => {\n    setRenderStart(performance.now());\n  }, []);\n\n  React.useEffect(() => {\n    if (renderStart) {\n      const renderTime = performance.now() - renderStart;\n      performanceMonitor.trackComponentRender(componentName, renderTime);\n    }\n  });\n};\n\nexport default performanceMonitor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}